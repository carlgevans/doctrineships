@using DoctrineShips.Web.ViewModels
@using GridMvc.Html
@using Tools;
@model SearchShipFitContractsStationViewModel

@{
    ViewBag.Title = "Available Contracts";
}

<div id="ds-main" role="main">

    <div id="ds-header">
        <h1>
            Available Contracts<br />
            <small>Current contracts for the selected ship fit.y</small>
        </h1>
        @if (Model.ShipFit != null)
        {
            <div class="ds-header-image">
                <img src="@Model.ShipFit.RenderImageUrl" alt="@Model.ShipFit.Name" />
                <br />
                <p>@Model.ShipFit.Name</p>
            </div>
        }
        <div class="ds-header-detail">
            <p>Click on the purchase button to open the contract in-game. Unless the contract is a public listing, you will need to be a member of the corporation or alliance to view it.</p>
        </div>
    </div>

    @if (Model != null && Model.Contracts != null && Model.Contracts.Count() != 0)
        {
            <div id="ds-grid">

                <div class="ds-grid-header">
                    <button type="button" onclick="location.href='@Url.Action("ShipFitContracts", "Search", new { shipFitId = @Model.ShipFit.ShipFitId }, Request.Url.Scheme)'"><span class="glyphicon glyphicon-th-list"></span> Multi-Station View</button>
                    @if (Request.IsAuthenticated)
                    {
                        <button type="button" onclick="shortenUrl('@Request.RawUrl')"><span class="ds-tooltip" tooltip="A shortened url will be created for this page with the current filters and ordering.&#10;&#10;Urls have a fixed duration, specified in the account settings."><span class="glyphicon glyphicon-pushpin"></span> Fleet Ping Url</span></button>
                    }
                    <strong>Contracts:</strong> @Model.Contracts.Count()<br />
                    <strong>Solar System:</strong><span class="ds-tooltip" tooltip="Click to set destination. IGB only and the website must be trusted."><a href="javascript:void(0)" onclick="setDestination(@Model.Contracts.First().SolarSystemId)"> @Model.Contracts.First().SolarSystemName</a></span><br />
                    <strong>Station:</strong><span class="ds-tooltip" tooltip="Click to set destination. IGB only and the website must be trusted."><a href="javascript:void(0)" onclick="setDestination(@Model.Contracts.First().StartStationId)"> @Model.Contracts.First().StartStationName</a></span>
                </div>

                @Html.Grid(Model.Contracts).Columns(columns =>
                                {
                                    columns.Add().Encoded(false).Sanitized(false).RenderValueAs(c => @<div><a href="javascript:void(0)" onclick="showContract(@c.SolarSystemId, @c.ContractId)"><img src="@c.ShipFit.ThumbnailImageUrl" /></a><span class="ds-tooltip" tooltip="Contract Description:&#10;@c.Title&#10;&#10;Contract Id: @c.ContractId&#10;Issuer Id: @c.IssuerId&#10;Issuer Corp Id: @c.IssuerCorpId&#10;Issued: @c.DateIssued&#10;Expires: @c.DateExpired"><span class="glyphicon glyphicon-info-sign"></span></span><p> @c.ShipFit.Hull</p></div>);
                                    columns.Add(c => c.ShipFit.ShipFitId).Css("hidden-xs").Encoded(false).Sanitized(false).Titled("Fit ID").RenderValueAs(c => @<a href='@Url.Action("Detail", "ShipFit", new { shipFitId = @c.ShipFitId }, Request.Url.Scheme)'>@("DS" + @c.ShipFitId)</a>).Filterable(true).Sortable(true);
                                    columns.Add(c => c.ShipFit.Name).Titled("Fit Name").Filterable(true).Sortable(true);
                                    columns.Add(c => c.ShipFit.Role).Css("hidden-xs").Titled("Role").Filterable(true).Sortable(true);
                                    columns.Add(c => c.Price).Titled("Price").RenderValueAs(c => @String.Format("{0:N0} ISK", @c.Price)).Filterable(true).Sortable(true);
                                    columns.Add(c => c.IsValid).Css("hidden-xs").Titled("Valid?").RenderValueAs(c => c.IsValid == true ? "Yes" : "No").Filterable(true).Sortable(true);
                                    columns.Add().Css("hidden-xs").Encoded(false).Sanitized(false).RenderValueAs(c => @c.ShipFit.AccountId == Conversion.StringToInt32(User.Identity.Name) ? "<div class=\"ds-grid-tools\"><span class=\"ds-tooltip\" tooltip=\"Click to open the ship fitting in-game (IGB Only).\"><button type=\"button\" onclick=\"showFitting('" + @c.ShipFit.FittingString + "')\"><span class=\"glyphicon glyphicon-list-alt\"></span> Eve Fit</button></span><br /><span class=\"ds-tooltip\" tooltip=\"Click to see market details and a component list for this ship fit.\"><a href='" + @Url.Action("Detail", "ShipFit", new { shipFitId = @c.ShipFitId }, Request.Url.Scheme) + "' role=\"button\"><span class=\"glyphicon glyphicon-search\"></span> Fit Detail</a></span><br /><span class=\"ds-tooltip\" tooltip=\"Click to open this contract in-game (IGB Only).\"><a href=\"javascript:void(0)\" onclick=\"showContract(" + @c.SolarSystemId + "," + @c.ContractId + ")\" role=\"button\"><span class=\"glyphicon glyphicon-shopping-cart\"></span> Purchase</a></span></div>" : "<div class=\"ds-grid-tools\"><span class=\"ds-tooltip\" tooltip=\"Click to open this contract in-game (IGB Only).\"><a href=\"javascript:void(0)\" onclick=\"showContract(" + @c.SolarSystemId + "," + @c.ContractId + ")\" role=\"button\"><span class=\"glyphicon glyphicon-shopping-cart\"></span> Purchase</a></span></div>");
                                }).WithPaging(20, 5).WithMultipleFilters().SetRowCssClasses(item =>
                                                                                                                                    {
                                                                                                                                        if (item.IsValid == false)
                                                                                                                                        {
                                                                                                                                            return "ds-grid-status-alert";
                                                                                                                                        }
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            return "ds-grid-status-none";
                                                                                                                                        }
                                                                                                                                    })
            </div>
        }
        else
        {
            <div id="ds-message">
                <b>No Contracts Found</b>
            </div>
        }
</div>